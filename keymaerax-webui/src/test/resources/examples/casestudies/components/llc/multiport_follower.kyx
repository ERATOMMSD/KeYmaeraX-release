ArchiveEntry "Follower Component"

Definitions
  Real ep;   /* time limit for control decisions */
  Real A;
  Real B;
End.

ProgramVariables
  Real xl;
  Real vl;
  Real xf;
  Real vf;
  Real af;
  Real t;    /* time */
  Real xl0;
  Real vl0;
End.

Problem
    ep > 0
  & A >= 0
  & B > 0
  & t = 0
  & vf >= 0
  & xf < xl & xf + vf^2/(2*B) < xl + vl^2/(2*B)
  & xl = xl0
  & vl = vl0
  & 0 <= vl
  ->
  [
    {
      /* control leader */
      {
         af := -B;
      ++ ?vf=0; af:=0;
      ++ ?xf + vf^2/(2*B) + (A/B+1)*(A/2*ep^2 + ep*vf) < xl + vl^2/(2*B); af :=*; ?-B <= af & af <= A;
      }

      xl0 := xl;
      vl0 := vl;

    	t := 0;

      /* dynamics */
      { xf' = vf,
        vf' = af,
        t' = 1 & vf >= 0 & t <= ep
      }

      xl :=*; vl :=*; ?0 <= vl & -B*t <= vl-vl0 & vl-vl0 <= A*t & xl-xl0 >= (vl+vl0)/2*t;
    }* @invariant(0<= vf & xf < xl & xf+vf^2/(2*B) < xl + vl^2/(2*B) & 0 <= t & t <= ep &
                  0 <= vl & -B*t <= vl-vl0 & vl-vl0 <= A*t & xl-xl0 >= (vl+vl0)/2*t)
  ] (xf < xl)
End.

Tactic "Proof"
unfold ; loop({`0<=vf&xf < xl&xf+vf^2/(2*B()) < xl+vl^2/(2*B())&0<=t&t<=ep()&0<=vl&-B()*t<=vl-vl0&vl-vl0<=A()*t&xl-xl0>=(vl+vl0)/2*t`}, 1) ; <(
  QE,
  QE,
  composeb(1) ; composeb(1.1) ; composeb(1.1.1) ; composeb(1.1.1.1) ; composeb(1.1.1.1.1) ; composeb(1.1.1.1.1.1) ; composeb(1.1.1.1.1.1.1) ; choiceb(1) ; andR(1) ; <(
    solve(1.1.1.1.1) ; assignb(1) ; assignb(1) ; assignb(1) ; assignb(1) ; allR(1) ; implyR(1) ; implyR(1) ; allL({`t_`}, -8) ; implyL(-8) ; <(
      hideR(1) ; QE,
      randomb(1) ; allR(1) ; randomb(1) ; allR(1) ; testb(1) ; implyR(1) ; andR(1) ; <(
        QE,
        andR(1) ; <(
          QE,
          andR(1) ; <(
            QE,
            QE
            )
          )
        )
      ),
    choiceb(1) ; andR(1) ; <(
      solve(1.1.1.1.1) ; composeb(1) ; assignb(1.1) ; assignb(1.1) ; testb(1) ; implyR(1) ; assignb(1.0.1.1) ; assignb(1.0.1) ; allR(1) ; implyR(1) ; allR(1) ; implyR(1) ; allR(1) ; implyR(1) ; implyR(1) ; randomb(1) ; allR(1) ; randomb(1) ; allR(1) ; testb(1) ; implyR(1) ; QE,
      solve(1.1.1.1.1) ; composeb(1) ; testb(1) ; implyR(1) ; composeb(1) ; randomb(1) ; allR(1) ; testb(1) ; implyR(1) ; assignb(1) ; assignb(1) ; assignb(1) ; allR(1) ; implyR(1) ; implyR(1) ; randomb(1) ; allR(1) ; randomb(1) ; allR(1) ; testb(1) ; implyR(1) ; andR(1) ; <(
        QE,
        allL({`t_`}, -10) ; implyL(-10) ; <(
          hideR(1=={`af*(t_^2/2)+vf*t_+xf < xl&af*(t_^2/2)+vf*t_+xf+(af*t_+vf)^2/(2*B()) < xl+vl^2/(2*B())&0<=t_+0&t_+0<=ep()&0<=vl&-B()*(t_+0)<=vl-vl0&vl-vl0<=A()*(t_+0)&xl-xl0>=(vl+vl0)/2*(t_+0)`}) ; QE,
          andL('L)* ; edit({`xf+vf^2/(2*B())+(A()/B()+1)*(A()/2*t_^2+t_*vf) < xl_0+vl_0^2/(2*B())`}, -4) ; andR(1) ; <(
            hideL(-1=={`ep()>0`}) ; hideL(-11=={`t_+0<=ep()`}) ; hideL(-18=={`t<=ep()`}) ; hideL(-8=={`-B()<=af`}) ; hideL(-19=={`vl_0-vl0_0<=A()*t`}) ; hideL(-14=={`vl-vl0<=A()*(1*(0+1*t_-0)+0)`}) ; hideL(-13=={`xf+vf^2/(2*B()) < xl_0+vl_0^2/(2*B())`}) ; QE,
            andR(1) ; <(
              edit({`-B()*t_<=vl-vl0`}, -15) ; edit({`xl-xl0>=(vl+vl0)/2*t_`}, -18) ; hideL(-1=={`ep()>0`}) ; hideL(-11=={`t_+0<=ep()`}) ; hideL(-17=={`0<=t`}) ; hideL(-17=={`t<=ep()`}) ; hideL(-19=={`vl_0-vl0_0<=A()*t`}) ; hideL(-19=={`xl_0-xl0_0>=(vl_0+vl0_0)/2*t`}) ; hideL(-18=={`-B()*t<=vl_0-vl0_0`}) ; hideL(-8=={`-B()<=af`}) ; hideL(-13=={`xf+vf^2/(2*B()) < xl_0+vl_0^2/(2*B())`}) ; edit({`vl-vl0<=A()*t_`}, -13) ; hideL(-13=={`vl-vl0<=A()*t_`}) ; allL2R(-5) ; hideL(-5=={`vl0=vl_0`}) ; allL2R(-4) ; hideL(-4=={`xl0=xl_0`}) ; edit({`A()*(t_^2/2)+vf*t_+xf+(A()*t_+vf)^2/(2*B()) < xl+vl^2/(2*B())`}, 1) ; hideL(-6=={`af<=A()`}) ; hideL(-6=={`af*t_+vf>=0`}) ; QE,
              hideL(-4=={`xf+vf^2/(2*B())+(A()/B()+1)*(A()/2*t_^2+t_*vf) < xl_0+vl_0^2/(2*B())`}) ; QE
              )
            )
          )
        )
      )
    )
  )
End.

End.